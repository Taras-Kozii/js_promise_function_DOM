{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","handler","nodeName","id","printMessage","message","elementMessage","document","createElement","className","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GAMjBH,EAAQI,iBAAiBH,EALhBI,WACPF,EAAkBF,UAAAA,OAAAA,EAChBD,4BAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GADnC,UAQN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAiBC,SAASC,cAAc,OAE9CF,EAAeG,UAAY,UAC3BH,EAAeI,YAAcL,EAC7BE,SAASI,KAAKC,OAAON,IAGvBO,OAAOC,QAAU,CACfnB,QAAAA,EACAS,aAAAA","file":"main.784d7a9d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    function handler() {\n      resolve(`It was ${eventName} on the element:\n      ${element.nodeName}, id: ${element.id}.`);\n    }\n\n    element.addEventListener(eventName, handler);\n  });\n}\n\nconst printMessage = (message) => {\n  const elementMessage = document.createElement('div');\n\n  elementMessage.className = 'message';\n  elementMessage.textContent = message;\n  document.body.append(elementMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}